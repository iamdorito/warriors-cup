[{"/Users/dc/Development/projects/warriors-cup/client/src/index.js":"1","/Users/dc/Development/projects/warriors-cup/client/src/App.js":"2","/Users/dc/Development/projects/warriors-cup/client/src/reportWebVitals.js":"3","/Users/dc/Development/projects/warriors-cup/client/src/components/Footer.jsx":"4","/Users/dc/Development/projects/warriors-cup/client/src/components/Header.jsx":"5","/Users/dc/Development/projects/warriors-cup/client/src/components/SearchResults.jsx":"6","/Users/dc/Development/projects/warriors-cup/client/src/components/Connect.jsx":"7","/Users/dc/Development/projects/warriors-cup/client/src/components/Login.jsx":"8","/Users/dc/Development/projects/warriors-cup/client/src/components/Announcements.jsx":"9","/Users/dc/Development/projects/warriors-cup/client/src/components/Events/Events.jsx":"10","/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AthletesFilter.jsx":"11","/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AllAthletes.jsx":"12","/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AthleteCard.jsx":"13","/Users/dc/Development/projects/warriors-cup/client/src/components/Home/Home.jsx":"14","/Users/dc/Development/projects/warriors-cup/client/src/components/Home/Sponsors.jsx":"15","/Users/dc/Development/projects/warriors-cup/client/src/components/Home/Testimonial.jsx":"16","/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/NewAthleteForm.jsx":"17","/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AthleteModal.jsx":"18","/Users/dc/Development/projects/warriors-cup/client/src/components/Subscribe.jsx":"19"},{"size":535,"mtime":1679283907120,"results":"20","hashOfConfig":"21"},{"size":1599,"mtime":1679249235414,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1678897706163,"results":"23","hashOfConfig":"21"},{"size":173,"mtime":1679266348213,"results":"24","hashOfConfig":"21"},{"size":11572,"mtime":1679270440571,"results":"25","hashOfConfig":"21"},{"size":300,"mtime":1678910512758,"results":"26","hashOfConfig":"21"},{"size":2118,"mtime":1679087715355,"results":"27","hashOfConfig":"21"},{"size":5312,"mtime":1679003695762,"results":"28","hashOfConfig":"21"},{"size":3116,"mtime":1678996797223,"results":"29","hashOfConfig":"21"},{"size":4311,"mtime":1679270207096,"results":"30","hashOfConfig":"21"},{"size":13538,"mtime":1679080237007,"results":"31","hashOfConfig":"21"},{"size":1700,"mtime":1679290367995,"results":"32","hashOfConfig":"21"},{"size":1704,"mtime":1679290738392,"results":"33","hashOfConfig":"21"},{"size":2880,"mtime":1679267471552,"results":"34","hashOfConfig":"21"},{"size":1899,"mtime":1678989917051,"results":"35","hashOfConfig":"21"},{"size":12610,"mtime":1679086776749,"results":"36","hashOfConfig":"21"},{"size":14638,"mtime":1679294758422,"results":"37","hashOfConfig":"21"},{"size":2609,"mtime":1679291389197,"results":"38","hashOfConfig":"21"},{"size":3923,"mtime":1679266812288,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1620h7y",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dc/Development/projects/warriors-cup/client/src/index.js",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/App.js",["102","103"],[],"/Users/dc/Development/projects/warriors-cup/client/src/reportWebVitals.js",[],[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Footer.jsx",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Header.jsx",["104","105","106","107"],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/SearchResults.jsx",["108","109","110"],[],"import '../css/search.css'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst SearchResults = ({ search }) => {\n\n    return (\n        <div className=\"searchContainer\">\n            \n        </div>\n    )\n}\n\nexport default SearchResults;","/Users/dc/Development/projects/warriors-cup/client/src/components/Connect.jsx",["111"],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Login.jsx",["112","113"],[],"import { useState, useRef } from 'react'\nimport Cookies from 'js-cookie'\nimport { useEffect } from 'react'\nimport { LockClosedIcon } from '@heroicons/react/20/solid'\n\nfunction Profile ({user}) {\n  return (\n    <h3>{user.username}</h3>\n  )\n}\n\nexport default function Login() {\n  const [user, setUser] = useState(null)\n  const form = useRef()\n\n  useEffect(() => {\n    const loadUser = async () => {\n      let req = await fetch(\"http://localhost:3000/me\", {\n        headers: {Authorization: Cookies.get('token')}\n      })\n      let res = await req.json()\n      if (res.user) setUser(res.user)\n    }\n    if (Cookies.get('token')) loadUser()\n  }, [])\n\n  const logout = () => {\n    Cookies.remove('token')\n    setUser(null)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    let formData = new FormData(form.current)\n    let req = await fetch(\"http://localhost:3000/login\", {\n      method: 'POST',\n      body: formData\n    })\n    let res = await req.json()\n    console.log(\"Res\", res)\n    Cookies.set('token', res.token)\n    setUser(res.user)\n  }\n\n  return (\n    <div className=\"App\">\n      { user && <Profile user={user} /> }\n      {/* <form onSubmit={handleSubmit} ref={form}>\n        <input name='email' type='email' placeholder=\"email\" />\n        <input name='password' type='text' placeholder=\"password\" />\n        <button>\n        LOGIN\n        </button>\n      </form>\n      <br /> */}\n      <button onClick={logout}>LOGOUT</button>\n\n      <div className=\"flex min-h-full items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"w-full max-w-md space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\n              Sign in to your account\n            </h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              Or{' '}\n              <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n          <form \n            className=\"mt-8 space-y-6\"\n            onSubmit={handleSubmit} \n            ref={form}\n            >\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"-space-y-px rounded-md shadow-sm\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"relative block w-full rounded-t-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"relative block w-full rounded-b-md border-0 py-1.5 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative flex w-full justify-center rounded-md bg-indigo-600 py-2 px-3 text-sm font-semibold text-white hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n                  <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n                </span>\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/dc/Development/projects/warriors-cup/client/src/components/Announcements.jsx",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Events/Events.jsx",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AthletesFilter.jsx",["114","115"],[],"import { Fragment, useState } from 'react'\nimport { Dialog, Disclosure, Menu, Transition } from '@headlessui/react'\nimport { XMarkIcon } from '@heroicons/react/24/outline'\nimport { ChevronDownIcon, FunnelIcon, MinusIcon, PlusIcon, Squares2X2Icon } from '@heroicons/react/20/solid'\n\nconst sortOptions = [\n  { name: 'Most Popular', href: '#', current: true },\n  { name: 'Best Rating', href: '#', current: false },\n  { name: 'Newest', href: '#', current: false },\n  { name: 'Price: Low to High', href: '#', current: false },\n  { name: 'Price: High to Low', href: '#', current: false },\n]\nconst subCategories = [\n  { name: 'All', href: '#' },\n  { name: 'Women', href: '#' },\n  { name: 'Men', href: '#' },\n]\nconst filters = [\n  {\n    id: 'color',\n    name: 'Color',\n    options: [\n      { value: 'white', label: 'White', checked: false },\n      { value: 'beige', label: 'Beige', checked: false },\n      { value: 'blue', label: 'Blue', checked: true },\n      { value: 'brown', label: 'Brown', checked: false },\n      { value: 'green', label: 'Green', checked: false },\n      { value: 'purple', label: 'Purple', checked: false },\n    ],\n  },\n  {\n    id: 'category',\n    name: 'Category',\n    options: [\n      { value: 'new-arrivals', label: 'New Arrivals', checked: false },\n      { value: 'sale', label: 'Sale', checked: false },\n      { value: 'travel', label: 'Travel', checked: true },\n      { value: 'organization', label: 'Organization', checked: false },\n      { value: 'accessories', label: 'Accessories', checked: false },\n    ],\n  },\n  {\n    id: 'size',\n    name: 'Size',\n    options: [\n      { value: '2l', label: '2L', checked: false },\n      { value: '6l', label: '6L', checked: false },\n      { value: '12l', label: '12L', checked: false },\n      { value: '18l', label: '18L', checked: false },\n      { value: '20l', label: '20L', checked: false },\n      { value: '40l', label: '40L', checked: true },\n    ],\n  },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function At() {\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\n\n  return (\n    <div className=\"bg-white\">\n      <div>\n        {/* Mobile filter dialog */}\n        <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"relative z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n            </Transition.Child>\n\n            <div className=\"fixed inset-0 z-40 flex\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"transition ease-in-out duration-300 transform\"\n                enterFrom=\"translate-x-full\"\n                enterTo=\"translate-x-0\"\n                leave=\"transition ease-in-out duration-300 transform\"\n                leaveFrom=\"translate-x-0\"\n                leaveTo=\"translate-x-full\"\n              >\n                <Dialog.Panel className=\"relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl\">\n                  <div className=\"flex items-center justify-between px-4\">\n                    <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\n                    <button\n                      type=\"button\"\n                      className=\"-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400\"\n                      onClick={() => setMobileFiltersOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close menu</span>\n                      <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n\n                  {/* Filters */}\n                  <form className=\"mt-4 border-t border-gray-200\">\n                    <h3 className=\"sr-only\">Categories</h3>\n                    <ul role=\"list\" className=\"px-2 py-3 font-medium text-gray-900\">\n                      {subCategories.map((category) => (\n                        <li key={category.name}>\n                          <a href={category.href} className=\"block px-2 py-3\">\n                            {category.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n\n                    {filters.map((section) => (\n                      <Disclosure as=\"div\" key={section.id} className=\"border-t border-gray-200 px-4 py-6\">\n                        {({ open }) => (\n                          <>\n                            <h3 className=\"-mx-2 -my-3 flow-root\">\n                              <Disclosure.Button className=\"flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500\">\n                                <span className=\"font-medium text-gray-900\">{section.name}</span>\n                                <span className=\"ml-6 flex items-center\">\n                                  {open ? (\n                                    <MinusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                  ) : (\n                                    <PlusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                  )}\n                                </span>\n                              </Disclosure.Button>\n                            </h3>\n                            <Disclosure.Panel className=\"pt-6\">\n                              <div className=\"space-y-6\">\n                                {section.options.map((option, optionIdx) => (\n                                  <div key={option.value} className=\"flex items-center\">\n                                    <input\n                                      id={`filter-mobile-${section.id}-${optionIdx}`}\n                                      name={`${section.id}[]`}\n                                      defaultValue={option.value}\n                                      type=\"checkbox\"\n                                      defaultChecked={option.checked}\n                                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                                    />\n                                    <label\n                                      htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\n                                      className=\"ml-3 min-w-0 flex-1 text-gray-500\"\n                                    >\n                                      {option.label}\n                                    </label>\n                                  </div>\n                                ))}\n                              </div>\n                            </Disclosure.Panel>\n                          </>\n                        )}\n                      </Disclosure>\n                    ))}\n                  </form>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        <main className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-baseline justify-between border-b border-gray-200 pt-24 pb-6\">\n            <h1 className=\"text-4xl font-bold tracking-tight text-gray-900\">New Arrivals</h1>\n\n            <div className=\"flex items-center\">\n              <Menu as=\"div\" className=\"relative inline-block text-left\">\n                <div>\n                  <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\n                    Sort\n                    <ChevronDownIcon\n                      className=\"-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  </Menu.Button>\n                </div>\n\n                <Transition\n                  as={Fragment}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform opacity-0 scale-95\"\n                  enterTo=\"transform opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"transform opacity-100 scale-100\"\n                  leaveTo=\"transform opacity-0 scale-95\"\n                >\n                  <Menu.Items className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                    <div className=\"py-1\">\n                      {sortOptions.map((option) => (\n                        <Menu.Item key={option.name}>\n                          {({ active }) => (\n                            <a\n                              href={option.href}\n                              className={classNames(\n                                option.current ? 'font-medium text-gray-900' : 'text-gray-500',\n                                active ? 'bg-gray-100' : '',\n                                'block px-4 py-2 text-sm'\n                              )}\n                            >\n                              {option.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </div>\n                  </Menu.Items>\n                </Transition>\n              </Menu>\n\n              <button type=\"button\" className=\"-m-2 ml-5 p-2 text-gray-400 hover:text-gray-500 sm:ml-7\">\n                <span className=\"sr-only\">View grid</span>\n                <Squares2X2Icon className=\"h-5 w-5\" aria-hidden=\"true\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"-m-2 ml-4 p-2 text-gray-400 hover:text-gray-500 sm:ml-6 lg:hidden\"\n                onClick={() => setMobileFiltersOpen(true)}\n              >\n                <span className=\"sr-only\">Filters</span>\n                <FunnelIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n\n          <section aria-labelledby=\"products-heading\" className=\"pt-6 pb-24\">\n            <h2 id=\"products-heading\" className=\"sr-only\">\n              Products\n            </h2>\n\n            <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4\">\n              {/* Filters */}\n              <form className=\"hidden lg:block\">\n                <h3 className=\"sr-only\">Categories</h3>\n                <ul role=\"list\" className=\"space-y-4 border-b border-gray-200 pb-6 text-sm font-medium text-gray-900\">\n                  {subCategories.map((category) => (\n                    <li key={category.name}>\n                      <a href={category.href}>{category.name}</a>\n                    </li>\n                  ))}\n                </ul>\n\n                {filters.map((section) => (\n                  <Disclosure as=\"div\" key={section.id} className=\"border-b border-gray-200 py-6\">\n                    {({ open }) => (\n                      <>\n                        <h3 className=\"-my-3 flow-root\">\n                          <Disclosure.Button className=\"flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500\">\n                            <span className=\"font-medium text-gray-900\">{section.name}</span>\n                            <span className=\"ml-6 flex items-center\">\n                              {open ? (\n                                <MinusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                              ) : (\n                                <PlusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                              )}\n                            </span>\n                          </Disclosure.Button>\n                        </h3>\n                        <Disclosure.Panel className=\"pt-6\">\n                          <div className=\"space-y-4\">\n                            {section.options.map((option, optionIdx) => (\n                              <div key={option.value} className=\"flex items-center\">\n                                <input\n                                  id={`filter-${section.id}-${optionIdx}`}\n                                  name={`${section.id}[]`}\n                                  defaultValue={option.value}\n                                  type=\"checkbox\"\n                                  defaultChecked={option.checked}\n                                  className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                                />\n                                <label\n                                  htmlFor={`filter-${section.id}-${optionIdx}`}\n                                  className=\"ml-3 text-sm text-gray-600\"\n                                >\n                                  {option.label}\n                                </label>\n                              </div>\n                            ))}\n                          </div>\n                        </Disclosure.Panel>\n                      </>\n                    )}\n                  </Disclosure>\n                ))}\n              </form>\n\n              {/* Product grid */}\n              <div className=\"lg:col-span-3\">{/* Your content */}</div>\n            </div>\n          </section>\n        </main>\n      </div>\n    </div>\n  )\n}",[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AllAthletes.jsx",["116"],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AthleteCard.jsx",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Home/Home.jsx",["117","118","119","120","121","122","123","124","125","126","127"],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Home/Sponsors.jsx",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Home/Testimonial.jsx",[],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/NewAthleteForm.jsx",["128","129","130"],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Athletes/AthleteModal.jsx",["131","132"],[],"/Users/dc/Development/projects/warriors-cup/client/src/components/Subscribe.jsx",[],[],{"ruleId":"133","severity":1,"message":"134","line":14,"column":20,"nodeType":"135","messageId":"136","endLine":14,"endColumn":29},{"ruleId":"133","severity":1,"message":"137","line":21,"column":19,"nodeType":"135","messageId":"136","endLine":21,"endColumn":29},{"ruleId":"133","severity":1,"message":"138","line":4,"column":3,"nodeType":"135","messageId":"136","endLine":4,"endColumn":16},{"ruleId":"133","severity":1,"message":"139","line":8,"column":3,"nodeType":"135","messageId":"136","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"140","line":9,"column":3,"nodeType":"135","messageId":"136","endLine":9,"endColumn":18},{"ruleId":"133","severity":1,"message":"141","line":13,"column":8,"nodeType":"135","messageId":"136","endLine":13,"endColumn":16},{"ruleId":"133","severity":1,"message":"142","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"143","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":33,"column":9,"nodeType":"146","endLine":33,"endColumn":100},{"ruleId":"147","severity":1,"message":"148","line":71,"column":15,"nodeType":"146","endLine":71,"endColumn":89},{"ruleId":"147","severity":1,"message":"148","line":127,"column":17,"nodeType":"146","endLine":127,"endColumn":91},{"ruleId":"144","severity":1,"message":"145","line":107,"column":21,"nodeType":"146","endLine":107,"endColumn":85},{"ruleId":"144","severity":1,"message":"145","line":238,"column":17,"nodeType":"146","endLine":238,"endColumn":119},{"ruleId":"147","severity":1,"message":"149","line":30,"column":11,"nodeType":"146","endLine":30,"endColumn":131},{"ruleId":"133","severity":1,"message":"142","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":18},{"ruleId":"133","severity":1,"message":"150","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"151","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"152","line":3,"column":21,"nodeType":"135","messageId":"136","endLine":3,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":20,"column":15,"nodeType":"146","endLine":20,"endColumn":66},{"ruleId":"147","severity":1,"message":"148","line":34,"column":15,"nodeType":"146","endLine":37,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":40,"column":15,"nodeType":"146","endLine":40,"endColumn":85},{"ruleId":"153","severity":1,"message":"154","line":55,"column":22,"nodeType":"146","endLine":55,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":56,"column":22,"nodeType":"146","endLine":56,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":57,"column":22,"nodeType":"146","endLine":57,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":58,"column":22,"nodeType":"146","endLine":58,"endColumn":41},{"ruleId":"133","severity":1,"message":"150","line":1,"column":11,"nodeType":"135","messageId":"136","endLine":1,"endColumn":17},{"ruleId":"133","severity":1,"message":"155","line":1,"column":19,"nodeType":"135","messageId":"136","endLine":1,"endColumn":29},{"ruleId":"133","severity":1,"message":"156","line":34,"column":11,"nodeType":"135","messageId":"136","endLine":34,"endColumn":24},{"ruleId":"133","severity":1,"message":"157","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":16},{"ruleId":"133","severity":1,"message":"142","line":1,"column":18,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setProfile' is assigned a value but never used.","'ArrowPathIcon' is defined but never used.","'FingerPrintIcon' is defined but never used.","'SquaresPlusIcon' is defined but never used.","'smolLogo' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Dialog' is defined but never used.","'Bars3Icon' is defined but never used.","'XMarkIcon' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'Transition' is defined but never used.","'addNewFighter' is assigned a value but never used.","'useRef' is defined but never used."]